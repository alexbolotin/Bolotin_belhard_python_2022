from concurrent.futures import Executor
from email import message
import telebot
from telebot import types
from config import TOKEN, open_weatther_token
import requests
import datetime

bot = telebot.TeleBot(TOKEN)


@bot.message_handler(commands = ['start'])
def welcome_user(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard = True)
    item1 = types.KeyboardButton('–∫–Ω–æ–ø–∫–∞ 1')
    item2 = types.KeyboardButton('–ü–æ–≥–æ–¥–∞')
    item3 = types.KeyboardButton('–ö—É—Ä—Å—ã –≤–∞–ª—é—Ç')
    item4 = types.KeyboardButton('–∫–Ω–æ–ø–∫–∞ 4')

    markup.add(item1, item2, item3, item4)
    bot.send_message(message.chat.id, f'–ü—Ä–∏–≤–µ—Ç {message.from_user.username}', reply_markup = markup)

@bot.message_handler(content_types = ['text'])
def bot_message(message):
    if message.text == '–∫–Ω–æ–ø–∫–∞ 1':
        msg = bot.send_message(message.chat.id, '–ù–∞–ø–∏—à–∏—Ç–µ —Å–ª–æ–≤–æ:')
        bot.register_next_step_handler(msg, change_message)
    elif message.text == '–ü–æ–≥–æ–¥–∞':
        msg = bot.send_message(message.chat.id, '–ù–∞–ø–∏—à–∏—Ç–µ –≥–æ—Ä–æ–¥, –≤ –∫–æ—Ç–æ—Ä–æ–º —Ö–æ—á–µ—à—å —É–∑–Ω–∞—Ç—å –ø–æ–≥–æ–¥—É:')
        bot.register_next_step_handler(msg, weather)
    elif message.text == '–ö—É—Ä—Å—ã –≤–∞–ª—é—Ç':
        msg = bot.send_message(message.chat.id, '–≠—Ç–æ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –æ–∫–æ–ª–æ 25 —Å–µ–∫—É–Ω–¥ üòî, –Ω–∞–ø–∏—à–∏ –º–Ω–µ,–≤ –∫–∞–∫–æ–º –≥–æ—Ä–æ–¥–µ –†–ë —Ç–µ–±—è –∏–Ω—Ç–µ—Ä–µ—Å—É—é—Ç –∫—É—Ä—Å—ã: !!\n\
–ü.—Å. —á–µ–º –º–µ–Ω—å—à–µ –≥–æ—Ä–æ–¥ - —Ç–µ–º –º–µ–Ω—å—à–µ –∂–¥–∞—Ç—å üôÇ')
        bot.register_next_step_handler(msg, exchange)

def change_message(message):
    text = message.text.lower()
    if text in ['–ø—Ä–∏–≤–µ—Ç','hi', 'hello']:
        bot.send_message(message.chat.id, '–∏ —Ç–µ–±–µ –ø—Ä–∏–≤–µ—Ç')
    else:
        bot.send_message(message.chat.id, text[::-1])

def weather(message):
    
    emodji = {
            'Clear': '–Ø—Å–Ω–æ \U00002600',
            'Clouds': '–û–±–ª–∞—á–Ω–æ \U00002601',
            'Rain': '–î–æ–∂–¥—å \U00002614',
            'Drizzle': '–Ø—Å–Ω–æ \U00002614',
            'Thunderstorm': '–ì—Ä–æ–∑–∞ \U000026A1',
            'Snow': '–°–Ω–µ–≥ \U0001F328',
            'Mist': '–¢—É–º–∞–Ω \U0001F23B'
            }

    try:
        r = requests.get(
                f'https://api.openweathermap.org/data/2.5/weather?q={message.text}&appid={open_weatther_token}&units=metric'
            )
        data = r.json()
        now = datetime.datetime.now().strftime('%Y-%m-%d %H:%M')
        city = data['name']
        cur_temp = data['main']['temp']
        cur_humidity = data['main']['humidity']
        cur_pressure = data['main']['pressure']
        temp_max = data['main']['temp_max']
        temp_min = data['main']['temp_min']
        wind_speed = data['wind']['speed']
        sunrise_time = datetime.datetime.fromtimestamp(data['sys']['sunrise'])
        sunset_time = datetime.datetime.fromtimestamp(data['sys']['sunset'])
        weather_emodzi = data['weather'][0]['main']
        if  weather_emodzi in emodji:
            weather_em = emodji[weather_emodzi]
        else:
            weather_em = '–ü—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç —á—Ç–æ —Ç–æ —Å—Ç—Ä–∞–Ω–Ω–æ–µ, –ø–æ—Å–º–æ—Ç—Ä–∏ –≤ –æ–∫–Ω–æ'
        bot.send_message(message.chat.id, f'–°–µ–≥–æ–¥–Ω—è ***{now}***\n'
                f'–ü–æ–≥–æ–¥–∞ –≤ –≥–æ—Ä–æ–¥–µ {city}:\n'
                f'–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {cur_temp} ¬∞–°\n'
                f'{weather_em}\n'
                f'–í–ª–∞–∂–Ω–æ—Å—Ç—å: {cur_humidity} %\n'
                f'–î–∞–≤–ª–µ–Ω–∏–µ: {cur_pressure} –º–º.—Ä—Ç.—Å—Ç\n'
                f'–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {temp_max} ¬∞–°\n'
                f'–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {temp_min} ¬∞–°\n'
                f'–°–∫–æ—Ä–æ—Å—Ç—å –≤–µ—Ç—Ä–∞: {wind_speed} –º.—Å\n'
                f'–í—Ä–µ–º—è —Ä–∞—Å—Å–≤–µ—Ç–∞: {sunrise_time}\n'
                f'–í—Ä–µ–º—è –∑–∞–∫–∞—Ç–∞: {sunset_time}\n'
                f'–•–æ—Ä–æ—à–µ–≥–æ –í–∞–º –¥–Ω—è!!\n\n'
        )

    except :
        bot.send_message(message.chat.id, '–ø—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞!')

def exchange(message):
    try:
        now = datetime.datetime.now().strftime('%Y-%m-%d')
        city = message.text
        url = f'https://belarusbank.by/api/kursExchange?city={city}' 
        r = requests.get(url)
        data = r.json()
        usd_in = data[0]['USD_in']
        usd_out = data[0]['USD_out']
        eur_in = data[0]['EUR_in']
        eur_out = data[0]['EUR_out']
        rub_in = data[0]['RUB_in']
        rub_out = data[0]['RUB_out']
        bot.send_message(message.chat.id,f'–ö—É—Ä—Å—ã –≤–∞–ª—é—Ç –Ω–∞ {now}\n–í –≥–æ—Ä–æ–¥–µ {city}:')
        bot.send_message(message.chat.id, f'–ö—É—Ä—Å –ø–æ–∫—É–ø–∫–∏ –¥–æ–ª–ª–∞—Ä–∞: {usd_in};\n–ö—É—Ä—Å –ø—Ä–æ–¥–∞–∂–∏ –¥–æ–ª–ª–∞—Ä–∞: {usd_out};\n\
–ö—É—Ä—Å –ø–æ–∫—É–ø–∫–∏ –µ–≤—Ä–æ: {eur_in};\n–ö—É—Ä—Å –ø—Ä–æ–¥–∞–∂–∏ –µ–≤—Ä–æ: {eur_out};\n–ö—É—Ä—Å –ø–æ–∫—É–ø–∫–∏ —Ä–æ—Å—Å–∏–π—Å–∫–æ–≥–æ —Ä—É–±–ª—è: {rub_in};\n–ö—É—Ä—Å –ø—Ä–æ–¥–∞–∂–∏ —Ä–æ—Å—Å–∏–π—Å–∫–æ–≥–æ —Ä—É–±–ª—è: {rub_out}.\n'
        )
    except :
        bot.send_message(message.chat.id, '–ø—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞!')

bot.polling(none_stop = True)