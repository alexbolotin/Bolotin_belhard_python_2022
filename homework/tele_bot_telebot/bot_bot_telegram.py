from concurrent.futures import Executor
from email import message
import telebot
from telebot import types
from config import TOKEN, open_weatther_token
import requests
import datetime

bot = telebot.TeleBot(TOKEN)

def keyboard_start(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard = True)
    item1 = types.KeyboardButton('/start')
    markup.add(item1)
    bot.send_message(message.chat.id, '–Ω–∞—á–∏–Ω–∞–µ–º —Å –Ω–∞—á–∞–ª–∞?',reply_markup = markup)

@bot.message_handler(commands = ['start'])
def welcome_user(message, txt = None):
    markup = types.ReplyKeyboardMarkup(resize_keyboard = True)
    item1 = types.KeyboardButton('–ò–≥—Ä–∞')
    item2 = types.KeyboardButton('–ü–æ–≥–æ–¥–∞')
    item3 = types.KeyboardButton('–ö—É—Ä—Å—ã –≤–∞–ª—é—Ç')
    item4 = types.KeyboardButton('–ü–æ–≥–æ–≤–æ—Ä–∏–º –æ —Ç–µ–±–µ?')
    markup.add(item1, item2, item3, item4)
    if txt is None:
        bot.send_message(message.chat.id, f'–ü—Ä–∏–≤–µ—Ç {message.from_user.username}\n–î–∞–≤–∞–π –ø–æ—Å–º–æ—Ç—Ä–∏–º, —á—Ç–æ —è —É–º–µ—é!', reply_markup = markup)
    else:
        bot.send_message(message.chat.id, txt, reply_markup = markup)

@bot.message_handler(content_types = ['text'])
def bot_message(message):
    if message.text == '–ò–≥—Ä–∞':
        markup = telebot.types.ReplyKeyboardRemove()
        msg = bot.send_message(message.chat.id, '–î–∞–≤–∞–π –ø–æ–∏–≥—Ä–∞–µ–º!\n–ù–∞–ø–∏—à–∏—Ç–µ —Å–ª–æ–≤–æ:', reply_markup = markup)
        bot.register_next_step_handler(msg, change_message)

    elif message.text == '–ü–æ–≥–æ–¥–∞':
        markup = telebot.types.ReplyKeyboardRemove()
        msg = bot.send_message(message.chat.id, '–ù–∞–ø–∏—à–∏—Ç–µ –≥–æ—Ä–æ–¥, –≤ –∫–æ—Ç–æ—Ä–æ–º —Ö–æ—á–µ—à—å —É–∑–Ω–∞—Ç—å –ø–æ–≥–æ–¥—É:', reply_markup = markup)
        bot.register_next_step_handler(msg, weather)

    elif message.text == '–ö—É—Ä—Å—ã –≤–∞–ª—é—Ç':
        markup = telebot.types.ReplyKeyboardRemove()
        msg = bot.send_message(message.chat.id, '–≠—Ç–æ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –æ–∫–æ–ª–æ 25 —Å–µ–∫—É–Ω–¥ üòî, –Ω–∞–ø–∏—à–∏ –º–Ω–µ,–≤ –∫–∞–∫–æ–º –≥–æ—Ä–æ–¥–µ –†–ë —Ç–µ–±—è –∏–Ω—Ç–µ—Ä–µ—Å—É—é—Ç –∫—É—Ä—Å—ã: !!\n\
–ü.—Å. —á–µ–º –º–µ–Ω—å—à–µ –≥–æ—Ä–æ–¥ - —Ç–µ–º –º–µ–Ω—å—à–µ –∂–¥–∞—Ç—å üôÇ', reply_markup = markup)
        bot.register_next_step_handler(msg, exchange)
        
    elif message.text == '–ü–æ–≥–æ–≤–æ—Ä–∏–º –æ —Ç–µ–±–µ?':
        markup = telebot.types.ReplyKeyboardRemove()
        msg = bot.send_message(message.from_user.id, '–î–∞–≤–∞–π –ø–æ–≥–æ–≤–æ—Ä–∏–º –æ —Ç–µ–±–µ, –Ω–∞–ø–∏—à–∏ +, –µ—Å–ª–∏ —Å–æ–≥–ª–∞—Å–µ–Ω?', reply_markup = markup)
        bot.register_next_step_handler(msg, info)

    elif message.text == '/start':
        msg = bot.send_message(message.chat.id, '–î–∞–≤–∞–π –Ω–∞—á–Ω–µ–º –≤—Å–µ —Å –Ω–∞—á–∞–ª–∞! –ù–∞–∂–∏–º–∞–π –°—Ç–∞—Ä—Ç')
        bot.register_next_step_handler(msg, welcome_user(message))

def change_message(message):
    text = message.text.lower()
    bot.send_message(message.chat.id, text[::-1])
    bot.send_message(message.chat.id, 'üòÇüòÇüòÇ')
    end_func(message)

def weather(message):
    emodji = {
            'Clear': '–Ø—Å–Ω–æ \U00002600',
            'Clouds': '–û–±–ª–∞—á–Ω–æ \U00002601',
            'Rain': '–î–æ–∂–¥—å \U00002614',
            'Drizzle': '–Ø—Å–Ω–æ \U00002614',
            'Thunderstorm': '–ì—Ä–æ–∑–∞ \U000026A1',
            'Snow': '–°–Ω–µ–≥ \U0001F328',
            'Mist': '–¢—É–º–∞–Ω \U0001F23B'
            }

    try:
        r = requests.get(
                f'https://api.openweathermap.org/data/2.5/weather?q={message.text}&appid={open_weatther_token}&units=metric'
            )
        data = r.json()
        now = datetime.datetime.now().strftime('%Y-%m-%d %H:%M')
        city = data['name']
        cur_temp = data['main']['temp']
        cur_humidity = data['main']['humidity']
        cur_pressure = data['main']['pressure']
        temp_max = data['main']['temp_max']
        temp_min = data['main']['temp_min']
        wind_speed = data['wind']['speed']
        sunrise_time = datetime.datetime.fromtimestamp(data['sys']['sunrise'])
        sunset_time = datetime.datetime.fromtimestamp(data['sys']['sunset'])
        weather_emodzi = data['weather'][0]['main']
        if  weather_emodzi in emodji:
            weather_em = emodji[weather_emodzi]
        else:
            weather_em = '–ü—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç —á—Ç–æ —Ç–æ —Å—Ç—Ä–∞–Ω–Ω–æ–µ, –ø–æ—Å–º–æ—Ç—Ä–∏ –≤ –æ–∫–Ω–æ'
        bot.send_message(message.chat.id, f'–°–µ–≥–æ–¥–Ω—è ***{now}***\n'
                f'–ü–æ–≥–æ–¥–∞ –≤ –≥–æ—Ä–æ–¥–µ {city.capitalize()}:\n'
                f'–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {cur_temp} ¬∞–°\n'
                f'{weather_em}\n'
                f'–í–ª–∞–∂–Ω–æ—Å—Ç—å: {cur_humidity} %\n'
                f'–î–∞–≤–ª–µ–Ω–∏–µ: {cur_pressure} –º–º.—Ä—Ç.—Å—Ç\n'
                f'–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {temp_max} ¬∞–°\n'
                f'–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {temp_min} ¬∞–°\n'
                f'–°–∫–æ—Ä–æ—Å—Ç—å –≤–µ—Ç—Ä–∞: {wind_speed} –º.—Å\n'
                f'–í—Ä–µ–º—è —Ä–∞—Å—Å–≤–µ—Ç–∞: {sunrise_time}\n'
                f'–í—Ä–µ–º—è –∑–∞–∫–∞—Ç–∞: {sunset_time}\n'
                f'–•–æ—Ä–æ—à–µ–≥–æ –í–∞–º –¥–Ω—è!!\n\n'
        )

    except :
        bot.send_message(message.chat.id, '–ø—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞!')
    
    end_func(message)

def exchange(message):
    try:
        now = datetime.datetime.now().strftime('%d-%m-%Y')
        city = message.text
        url = f'https://belarusbank.by/api/kursExchange?city={city}' 
        r = requests.get(url)
        data = r.json()
        usd_in = data[0]['USD_in']
        usd_out = data[0]['USD_out']
        eur_in = data[0]['EUR_in']
        eur_out = data[0]['EUR_out']
        rub_in = data[0]['RUB_in']
        rub_out = data[0]['RUB_out']
        bot.send_message(message.chat.id,f'–ö—É—Ä—Å—ã –≤–∞–ª—é—Ç –Ω–∞ {now}\n–í –≥–æ—Ä–æ–¥–µ {city.capitalize()}:')
        bot.send_message(message.chat.id, f'–ö—É—Ä—Å –ø–æ–∫—É–ø–∫–∏ USD: {usd_in};\n–ö—É—Ä—Å –ø—Ä–æ–¥–∞–∂–∏ USD: {usd_out};\n\
–ö—É—Ä—Å –ø–æ–∫—É–ø–∫–∏ EUR: {eur_in};\n–ö—É—Ä—Å –ø—Ä–æ–¥–∞–∂–∏ EUR: {eur_out};\n–ö—É—Ä—Å –ø–æ–∫—É–ø–∫–∏ RUB: {rub_in};\n–ö—É—Ä—Å –ø—Ä–æ–¥–∞–∂–∏ RUB: {rub_out}.\n'
        )
    except :
        bot.send_message(message.chat.id, '–ø—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞!')
    end_func(message)



def info(message):
    text = message.text.lower()
    if text in ['–¥–∞','–¥–∞–≤–∞–π', 'yes', 'y', '–æ–∫', '—Å–æ–≥–ª–∞—Å–µ–Ω','+', '–≤–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥']:
        markup = types.ReplyKeyboardMarkup(resize_keyboard = True)
        item1 = types.KeyboardButton('–∂–∏–≤–æ—Ç–Ω—ã–µ')
        item2 = types.KeyboardButton('—Ö–æ–±–±–∏')
        item3 = types.KeyboardButton('–º–∞—à–∏–Ω—ã')
        item4 = types.KeyboardButton('–ø—É—Ç–µ—à–µ—Å—Ç–≤–∏—è')
        back = types.KeyboardButton('–≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –Ω–∞—á–∞–ª–æ')
        markup.add(item1, item2, item3, item4, back)
        msg = bot.send_message(message.chat.id, '–≤—ã–±–µ—Ä–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—é, –æ –∫–æ—Ç–æ—Ä–æ–π —Ö–æ—Ç–µ–ª –±—ã –ø–æ–≥–æ–≤–æ—Ä–∏—Ç—å:',reply_markup = markup)
        bot.register_next_step_handler(msg, info_choice)        
    else:
         bot.send_message(message.chat.id, '–∑–Ω–∞—á–∏—Ç –≤ –¥—Ä—É–≥–æ–π —Ä–∞–∑')
         keyboard_start(message)

def info_choice(message):
    if message.text == '–∂–∏–≤–æ—Ç–Ω—ã–µ':
        txt = '—É —Ç–µ–±—è –µ—Å—Ç—å –¥–æ–º–∞—à–Ω–∏–µ –∂–∏–≤–æ—Ç–Ω—ã–µ?'
        txt1 = '–Ω–∞–ø–∏—à–∏, –∫—Ç–æ —É —Ç–µ–±—è:'
        txt2 = '–º–æ–∂–µ—Ç –ø–æ—Ä–∞ –∑–∞–≤–µ—Å—Ç–∏, –Ω–æ —ç—Ç–æ —É–∂–µ —Å–æ–≤—Å–µ–º –¥—Ä—É–≥–∞—è –∏—Å—Ç–æ—Ä–∏—è...'
        msg = info_choice_buttons(message,txt)
        bot.register_next_step_handler(msg, info_ask_1,txt1,txt2)

    elif message.text == '—Ö–æ–±–±–∏':
        txt = '—É —Ç–µ–±—è –µ—Å—Ç—å —Ö–æ–±–±–∏?'
        txt1 = '–Ω–∞–ø–∏—à–∏, –∫–∞–∫–æ–µ:'
        txt2 = '–º–æ–∂–µ—Ç –ø–æ—Ä–∞ –Ω–∞—á–∞—Ç—å —á–µ–º —Ç–æ —É–≤–ª–µ–∫–∞—Ç—å—Å—è? –ù–æ —ç—Ç–æ —É–∂–µ —Å–æ–≤—Å–µ–º –¥—Ä—É–≥–∞—è –∏—Å—Ç–æ—Ä–∏—è...'
        msg = info_choice_buttons(message,txt)
        bot.register_next_step_handler(msg, info_ask_1,txt1,txt2)

    elif message.text == '–º–∞—à–∏–Ω—ã':
        txt = '—É —Ç–µ–±—è –µ—Å—Ç—å –º–∞—à–∏–Ω–∞?'
        txt1 = '–Ω–∞–ø–∏—à–∏, –∫–∞–∫–∞—è –º–∞—Ä–∫–∞:'
        txt2 = '–º–æ–∂–µ—Ç –ø–æ—Ä–∞ –∑–∞–¥—É–º–∞—Ç—å –æ –ø–æ–∫—É–ø–∫–∏ —Å–≤–æ–µ–≥–æ –ª–∏—á–Ω–æ–≥–æ –∞–≤—Ç–æ? –ù–æ —ç—Ç–æ —É–∂–µ —Å–æ–≤—Å–µ–º –¥—Ä—É–≥–∞—è –∏—Å—Ç–æ—Ä–∏—è...'
        msg = info_choice_buttons(message,txt)
        bot.register_next_step_handler(msg, info_ask_1,txt1,txt2)

    elif message.text == '–ø—É—Ç–µ—à–µ—Å—Ç–≤–∏—è':
        txt = '–õ—é–±–∏—à—å –ø—É—Ç–µ—à–µ—Å—Ç–≤–æ–≤–∞—Ç—å?'
        txt1 = '–Ω–∞–ø–∏—à–∏, –≤ –∫–∞–∫—É—é —Å—Ç—Ä–∞–Ω—É —Ç—ã –±—ã –ø–æ—Å–æ–≤–µ—Ç–æ–≤–∞–ª —Å—å–µ–∑–¥–∏—Ç—å:'
        txt2 = '–¢—É—Ä–∏–∑–º –∏ –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏—è –Ω–∞–≤–µ—Ä–Ω–æ–µ –Ω–µ –¥–ª—è –≤—Å–µ—Ö... –Ω–æ —ç—Ç–æ —É–∂–µ —Å–æ–≤—Å–µ–º –¥—Ä—É–≥–∞—è –∏—Å—Ç–æ—Ä–∏—è...'
        msg = info_choice_buttons(message,txt)
        bot.register_next_step_handler(msg, info_ask_1,txt1,txt2)

    elif message.text == '–≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –Ω–∞—á–∞–ª–æ':
        bot.send_message(message.chat.id, f'–∑–Ω–∞—á–∏—Ç –ø–æ–≥–æ–≤–æ—Ä–∏–º –≤ –¥—Ä—É–≥–æ–π —Ä–∞–∑')
        keyboard_start(message)
        bot_message(message)

def info_choice_buttons(message,txt):
    markup = types.ReplyKeyboardMarkup(resize_keyboard = True)
    item1 = types.KeyboardButton('–¥–∞')
    item2 = types.KeyboardButton('–Ω–µ—Ç')
    back = types.KeyboardButton('–≤–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥')
    markup.add(item1, item2, back)
    msg = bot.send_message(message.chat.id, txt, reply_markup = markup)
    return msg

def info_ask_1(message,txt1,txt2):
    if message.text == '–¥–∞':
        markup = telebot.types.ReplyKeyboardRemove()
        msg = bot.send_message(message.from_user.id, txt1, reply_markup = markup)
        bot.register_next_step_handler(msg, end_func)
        
    elif message.text == '–Ω–µ—Ç':
        bot.send_message(message.chat.id, txt2)
        message.text = '–¥–∞'
        end_func(message)
        
    elif message.text == '–≤–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥':
        message.text = '–¥–∞'
        end_func(message)

def end_func(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard = True)
    back = types.KeyboardButton('–≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –æ—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é')
    markup.add(back)
    msg = bot.send_message(message.chat.id, '–°–ø–∞—Å–∏–±–æ, —á—Ç–æ –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞–ª–∏—Å—å –Ω–∞—à–∏–º —Å–µ—Ä–≤–∏—Å–æ–º!', reply_markup = markup)
    txt = '–Ω—É —á—Ç–æ, –ø—Ä–æ–¥–æ–ª–∂–∏–º –æ–±—â–µ–Ω–∏–µ?'
    bot.register_next_step_handler(msg, welcome_user, txt)

bot.polling(none_stop = True)  